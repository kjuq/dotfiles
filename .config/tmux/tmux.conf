# set first command
set -g default-command "fish"

# change prefix
set -g prefix C-j
unbind C-b

# C-j -> j send prefix into inner application
bind j send-keys -t $PANE_ID C-j
bind C-j send-keys -t $PANE_ID C-j

# vi copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-c send -X clear-selection
bind -T copy-mode-vi u send -X halfpage-up
bind -T copy-mode-vi d send -X halfpage-down

# Comfortable keymaps
bind Space copy-mode
bind C-Space copy-mode
bind v paste

# Easy window moving
bind C-l last-window

bind C-n next-window
bind Down next-window

bind C-p previous-window
bind Up previous-window

bind y select-pane -t :.+
bind C-y select-pane -t :.+

bind -n M-Tab next-window
bind -n M-q select-pane -t :.+

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0

# Arrow keys -> C-{p, n, b, f}
bind -n Up send-keys -t $PANE_ID C-p
bind -n M-Up send-keys -t $PANE_ID M-C-p
bind -n Down send-keys -t $PANE_ID C-n
bind -n M-Down send-keys -t $PANE_ID M-C-n
bind -n Left send-keys -t $PANE_ID C-b
bind -n M-Left send-keys -t $PANE_ID M-C-b
bind -n Right send-keys -t $PANE_ID C-f
bind -n M-Right send-keys -t $PANE_ID M-C-f
bind -n BSpace send-keys -t $PANE_ID C-h
bind -n M-BSpace send-keys -t $PANE_ID M-C-h
bind -n DC send-keys -t $PANE_ID C-d
bind -n M-DC send-keys -t $PANE_ID M-C-d
bind -n Tab send-keys -t $PANE_ID C-i
# bind -n M-Tab send-keys -t $PANE_ID M-C-i
bind -n HOME send-keys -t $PANE_ID C-a
bind -n M-HOME send-keys -t $PANE_ID M-C-a
bind -n END send-keys -t $PANE_ID C-e
bind -n M-END send-keys -t $PANE_ID M-C-e
bind -n ENTER send-keys -t $PANE_ID C-m
bind -n M-ENTER send-keys -t $PANE_ID M-C-m

# MacOS
bind -n M-Right send-keys -t $PANE_ID M-f
bind -n C-M-Right send-keys -t $PANE_ID C-M-f
bind -n M-Left send-keys -t $PANE_ID M-b
bind -n C-M-Left send-keys -t $PANE_ID C-M-b
bind -n M-BSpace send-keys -t $PANE_ID C-w
bind -n C-M-BSpace send-keys -t $PANE_ID M-C-w # available only on ORS layer

# Linux per word operations
bind -n C-Right send-keys -t $PANE_ID M-f
bind -n C-Left send-keys -t $PANE_ID M-b
bind -n C-BSpace send-keys -t $PANE_ID C-w # may not work because tty doesn't recognize C-Backspace

# Resize windows
bind -r H resize-pane -L 5
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 5

# Sync clipboard on an OSC52-compatible terminal emulator
set -g set-clipboard on
set -g allow-passthrough on

# fix TrueColor
set-option -g default-terminal "tmux-256color"
set -ag terminal-overrides ",$TERM:Tc"

# enable mouse control
setw -g mouse on

# No ESC lag
set -s escape-time 0

# Update status bar every n second
set -g status-interval 5

# Prefer emacs-like key bindings to vim-like one when pressing <Prefix>:
set -g status-keys emacs

# Start index from 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# For vim's autoread
set -g focus-events on

# niksingh710/minimal-tmux-status
# If not transparent bg=#2E3440
set -g status-position "bottom"
set -g status-style bg=default,fg=default
set -g status-justify absolute-centre
set -g status-left-length 20
set -g status-left '#[bg=default,fg=default,bold]#{?client_prefix,, Session: #S }#[bg=default,,fg=#7dcfff,bold]#{?client_prefix, Session: #S ,}'
set -g status-right '#[bg=default,fg=default,bold] %Y-%m-%d %H:%M '
set -g window-status-format '#[bg=default,fg=color243]  #I:#W.#(pwd="#{pane_current_path}"; echo ${pwd####*/})'
set -g window-status-current-format '#[bg=default,fg=default]  #I:#W.#(pwd="#{pane_current_path}"; echo ${pwd####*/})#{?window_zoomed_flag, ÓÆÅ ,}'

set -g pane-border-lines "heavy"
# set -g pane-border-status "bottom"
# set -g pane-border-format ""

set-window-option -g window-active-style fg=terminal
set-window-option -g window-style fg=color243

set -g message-style fg=cyan,blink
set -g mode-style "bg=#2E3440,fg=#BAC1CB" # selection color

# install tpm if it is not installed
if-shell "[ ! -d $XDG_CONFIG_HOME/tmux/plugins/tpm ]" {
	run -b "git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm"
}

# list of plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "wfxr/tmux-fzf-url"
set -g @plugin "trevarj/tmux-open-nvim"
run "ln -s $XDG_CONFIG_HOME/tmux/plugins/tmux-open-nvim/scripts/ton $HOME/.local/bin/ton"

set -g @plugin "sainnhe/tmux-fzf"
unbind f
bind F find-window -Z "%%"
bind t run -b "$XDG_CONFIG_HOME/tmux/plugins/tmux-fzf/scripts/clipboard.sh"
TMUX_FZF_LAUNCH_KEY="f"
TMUX_FZF_ORDER="command|session|window|pane|keybinding|process|clipboard"
TMUX_FZF_MENU=\
"IDE\nbash $XDG_CONFIG_HOME/tmux/scripts/ide.sh\n"\

# TMUX_FZF_MENU=\
# "foo\necho 'Hello!'\n"\
# "bar\nls ~\n"\
# "sh\nsh ~/test.sh\n"

# initialize plugins
run "$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm"
