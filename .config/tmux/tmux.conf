# change prefix
set -g prefix C-j
unbind C-b

# C-j -> j send prefix into inner application
bind j send-keys -t $PANE_ID C-j
bind C-j send-keys -t $PANE_ID C-j

# Arrow keys -> C-{p, n, b, f}
bind -n Up send-keys -t $PANE_ID C-p
bind -n Down send-keys -t $PANE_ID C-n
bind -n Left send-keys -t $PANE_ID C-b
bind -n Right send-keys -t $PANE_ID C-f
bind -n BSpace send-keys -t $PANE_ID C-h
bind -n DC send-keys -t $PANE_ID C-d
bind -n Tab send-keys -t $PANE_ID C-i
bind -n HOME send-keys -t $PANE_ID C-a
bind -n END send-keys -t $PANE_ID C-e
bind -n ENTER send-keys -t $PANE_ID C-m

bind -n M-Up send-keys -t $PANE_ID M-C-p
bind -n M-Down send-keys -t $PANE_ID M-C-n
bind -n M-Left send-keys -t $PANE_ID M-C-b
bind -n M-Right send-keys -t $PANE_ID M-C-f
bind -n M-BSpace send-keys -t $PANE_ID M-C-h
bind -n M-DC send-keys -t $PANE_ID M-C-d
bind -n M-Tab send-keys -t $PANE_ID M-C-i
bind -n M-HOME send-keys -t $PANE_ID M-C-a
bind -n M-END send-keys -t $PANE_ID M-C-e
bind -n M-ENTER send-keys -t $PANE_ID M-C-m

# MacOS
bind -n M-Right send-keys -t $PANE_ID M-f
bind -n M-Left send-keys -t $PANE_ID M-b
bind -n M-BSpace send-keys -t $PANE_ID C-w

# Linux
bind -n C-Right send-keys -t $PANE_ID M-f
bind -n C-Left send-keys -t $PANE_ID M-b
bind -n C-BSpace send-keys -t $PANE_ID C-w # may not work because tty doesn't recognize C-Backspace

# Both
bind -n C-M-Right send-keys -t $PANE_ID C-M-f
bind -n C-M-Left send-keys -t $PANE_ID C-M-b
bind -n C-M-BSpace send-keys -t $PANE_ID M-C-w # available only on ORS layer

bind Down next-window
bind C-n next-window
bind Up previous-window
bind C-p previous-window

# vi copy mode
setw -g mode-keys vi
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection

bind -T vi-choice Escape send -X cancel

bind y select-pane -t :.+
bind C-y select-pane -t :.+

set -g @capture_buf "$XDG_CONFIG_HOME/tmux/scripts/capture_buffer.sh"
bind E run "#{@capture_buf}"
bind e copy-mode
bind C-e copy-mode
bind END copy-mode
set-hook -g after-copy-mode 'set -p cursor-style block'

# Sync clipboard on an OSC52-compatible terminal emulator
set -g set-clipboard on
set -g allow-passthrough on

set -g wrap-search off

# TrueColor (Enabling this may slow down input latency?)
set -ga terminal-features ',*:RGB'

# necessary for restoring cursor shape when exiting Neovim
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[5 q'

# enable mouse control
setw -g mouse on

# No ESC lag
set -s escape-time 0

# Update status bar every n second
set -g status-interval 5

# Prefer emacs-like key bindings to vim-like one when pressing <Prefix>:
set -g status-keys emacs

# Start index from 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# For vim's autoread
set -g focus-events on

set -g extended-keys on

set -g history-file $XDG_CACHE_HOME/tmux_history

# https://github.com/niksingh710/minimal-tmux-status
# If not transparent bg=#2E3440
set -g status-position "bottom"
set -g status-style bg=default,fg=default
set -g status-justify absolute-centre
set -g status-left-length 20
set -g status-left "#[bg=default,fg=default,bold]#{?client_prefix,,#(uname --nodename) (#S) }#[bg=default,,fg=#7dcfff,bold]#{?client_prefix,#(uname --nodename) (#S) ,}"
set -g status-right "#[bg=default,fg=#ff0000,bold]#{?#(battery | grep 'Charging'),#(battery | cut -d ' ' -f1),}#[bg=default,fg=default,bold]#{?#(battery | grep 'Charging'),,#(battery | cut -d ' ' -f1)}  #[bg=default,fg=default,bold]%Y-%m-%d %H:%M"
# set -g window-status-format '#[bg=default,fg=color243]  #I:#W.#(pwd="#{pane_current_path}"; echo ${pwd####*/})'
# set -g window-status-current-format '#[bg=default,fg=default]  #I:#W.#(pwd="#{pane_current_path}"; echo ${pwd####*/})#{?window_zoomed_flag,[+],}'
set -g window-status-format '#[bg=default,fg=color243]  #I'
set -g window-status-current-format '#[bg=default,fg=default]  #I#{?window_zoomed_flag,+,}'

set -g pane-border-lines "heavy"
set -g pane-active-border-style fg=#703ddb

set-window-option -g window-active-style fg=terminal
set-window-option -g window-style fg=color243

set -g message-style fg=cyan,blink
set -g mode-style "bg=#2E3440,fg=#BAC1CB" # selection color
